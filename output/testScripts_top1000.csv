accepts,"mocha --reporter spec --check-leaks --bail test/"
acorn,"rollup -c acorn/rollup.config.js && rollup -c acorn-loose/rollup.config.js && node test/run.js && node test/lint.js"
adm-zip,"mocha -R spec"
ajv,"rm -rf spec/_json/*.js && node scripts/jsontests && prettier --list-different "./**/*.{json,yaml,js,ts}" && eslint "lib/**/*.ts" "spec/**/*.*s" scripts --ignore-pattern spec/JSON-Schema-Test-Suite && npm link && npm link ajv && nyc npm run test-spec"
@alifd-next,"node --max_old_space_size=8192 ./scripts/test/index.js"
amqplib,"make test"
angular-animate,""
@angular-animations,""
@angular-cdk,"node ./scripts/run-component-tests.js"
@angular-common,""
@angular-compiler-cli,""
@angular-compiler,""
@angular-core,""
@angular-devkit-core,""
@angular-devkit-schematics,""
@angular-forms,""
@angular-http,""
@angular-material,"node ./scripts/run-component-tests.js"
angular,""
@angular-platform-browser-dynamic,""
@angular-platform-browser,""
@angular-platform-server,""
@angular-router,""
ansi-colors,"mocha"
ansi-escapes,"xo && ava && tsd"
antd,"node ./scripts/generate-version && jest --config .jest.js --cache=false"
apollo-cache-inmemory,"jest --config ./config/jest.config.js"
apollo-client,"jest --config ./config/jest.config.js"
apollo-link-http,"lerna run test"
apollo-link,"lerna run test"
app-root-path,"nyc mocha -R spec"
archiver,"mocha --reporter dot"
argparse,"eslint . && nyc mocha"
arrify,"xo && ava && tsd"
assert,"babel assert.js test.js --out-dir build && babel internal --out-dir build/internal && babel test --out-dir build/test && node build/test.js"
assert-plus,"./node_modules/.bin/tape tests/*.js | ./node_modules/.bin/faucet"
async,"eslint --fix lib/ test/ perf/memory.js perf/suites.js perf/benchmark.js support/build/ support/*.js karma.conf.js && mocha"
async-validator,"jest"
autoprefixer,"jest --coverage && eslint . bin/* && check-dts && size-limit"
awesome-typescript-loader,"rimraf .test && mocha --trace-warnings --timeout 30000 --exit dist/__test__"
aws-sdk,"node ./scripts/composite-test.js"
axios,"grunt test"
@babel-cli,"make test"
@babel-core,"make test"
babel-eslint,"eslint . && cd test && mocha specs && cd -"
babel-helper-vue-jsx-merge-props,""
babelify,"tap test/*.js"
babel-jest,"yarn lint && yarn jest"
babel-loader,"eslint src test && cross-env BABEL_ENV=test yarn run build && nyc ava"
@babel-parser,"make test"
babel-plugin-add-module-exports,"mocha --require babel-register"
babel-plugin-dynamic-import-node,"eslint . && tape --require airbnb-js-shims --require babel-register test"
babel-plugin-import,"umi-test --coverage"
babel-plugin-lodash,"mocha --check-leaks --require @babel/register"
babel-plugin-module-resolver,"eslint src test && jest"
babel-plugin-named-asset-import,"cd packages/react-scripts && node bin/react-scripts.js test"
@babel-plugin-proposal-class-properties,"make test"
@babel-plugin-proposal-decorators,"make test"
@babel-plugin-proposal-export-default-from,"make test"
@babel-plugin-proposal-export-namespace-from,"make test"
@babel-plugin-proposal-object-rest-spread,"make test"
babel-plugin-transform-decorators-legacy,"babel-node node_modules/.bin/_mocha -- test"
babel-plugin-transform-react-remove-prop-types,"eslint . && echo "eslint: no lint errors" && mocha"
@babel-plugin-transform-runtime,"make test"
@babel-polyfill,"make test"
@babel-preset-env,"make test"
babel-preset-env,"rimraf lib && babel src -d lib && flow && mocha ./test --compilers js:babel-register -t 10000"
babel-preset-react-app,"cd packages/react-scripts && node bin/react-scripts.js test"
@babel-preset-react,"make test"
@babel-preset-typescript,"make test"
@babel-register,"make test"
@babel-runtime-corejs2,"make test"
@babel-runtime,"make test"
@babel-traverse,"make test"
@babel-types,"make test"
babylon,"eslint src bin test && flow && rimraf lib && rollup -c -m && ava"
backbone,"karma start && coffee test/model.coffee && eslint backbone.js test/*.js"
base64-js,"standard && tape test/*.js"
base-64,"mocha tests/tests.js"
basic-auth,"mocha --check-leaks --reporter spec --bail"
bcryptjs,"node node_modules/testjs/bin/testjs"
bcrypt,"npm install --build-from-source && nodeunit test"
bignumber.js,"node test/test"
bindings,""
bip39,"rm -rf src && tsc -p tsconfig.json && prettier 'ts_src/**/*.ts' --ignore-path ./.prettierignore --check && tslint -p tsconfig.json -c tslint.json && tape test/*.js"
bizcharts,"jest"
blessed,""
bl,"standard *.js test/*.js && node test/test.js | faucet"
bluebird,"node --expose-gc tools/test.js"
bn.js,"standardx && mocha --reporter=spec test/*-test.js"
body-parser,"mocha --require test/support/env --reporter spec --check-leaks --bail test/"
boom,"lab -a @hapi/code -t 100 -L -Y"
bootstrap,"npm-run-all lint dist js-test docs-build docs-lint"
boxen,"xo && nyc ava && tsd"
brfs,"tap test/*.js"
broccoli-funnel,"mocha tests/"
broccoli-merge-trees,"mocha"
browserify,"tap test/*.js"
browserslist,"jest --coverage && eslint . && check-dts && size-limit && yaspeller *.md"
browser-sync,"lerna run build && lerna run test --scope browser-sync"
bs58,"standard && tape test/index.js"
bson,"tsc && api-extractor run --typescript-compiler-folder node_modules/typescript --local && rimraf 'lib/**/*.d.ts*' && downlevel-dts bson.d.ts bson.d.ts && rollup -c rollup.config.js && mocha test/node test/*_tests.js && karma start karma.conf.js"
buffer,"standard && node ./bin/test.js"
bufferutil,"mocha"
bulma,""
bunyan,"tap test/*.test.js  # skip dtrace tests"
busboy,"node test/test.js"
bytebuffer,"node node_modules/testjs/bin/testjs tests/suite.js"
bytes,"mocha --check-leaks --reporter spec"
camelcase,"xo && ava && tsd"
canvas,"mocha test/*.test.js"
case-sensitive-paths-webpack-plugin,"mocha test/"
chai-as-promised,"mocha"
chai,"make test"
chalk,"xo && nyc ava && tsd"
chance,"ava"
change-case,"lerna run test"
chart.js,"concurrently "npm:lint-*" && cross-env NODE_ENV=test karma start --auto-watch --single-run --coverage --grep"
cheerio,"eslint --ignore-path .gitignore . && prettier "**/*.{js,ts,md,json,yml}" --ignore-path .gitignore --check && jest"
child_process,""
child-process-promise,"mocha --ui bdd --reporter spec ./test/"
chokidar,"eslint --report-unused-disable-directives --ignore-path .gitignore . && mocha --exit --timeout 90000"
classnames,"mocha tests/*.js"
clean-css,"vows"
clean-webpack-plugin,"jest"
clear,""
cli-color,"node ./node_modules/tad/bin/tad"
cli,""
clipboard,"karma start --single-run"
clipboardy,"xo && ava && tsd"
cli-spinner,""
cli-table2,"gulp coverage"
cli-table,"make test"
cli-ux,"yarn build --noEmit && tsc -p test --noEmit && mocha --forbid-only "test/**/*.test.ts" && yarn lint"
clone,"nodeunit test.js"
clui,""
codemirror,"node ./test/run.js"
coffee-script,"node ./bin/cake test"
color,"xo && mocha"
colors,"node tests/basic-test.js && node tests/safe-test.js"
columnify,"npm prune && make prepublish && tape test/*.js | tap-spec"
commander,"jest && tsd"
command-exists,"mocha test/test.js"
command-line-args,"rollup -c && esm-runner 'test/**/*.mjs'"
command-line-usage,"test-runner test/*.js"
common-tags,"eslint .*rc.js *.js src/**/*.js --ignore-pattern '!.*rc.js' && jest src"
component-emitter,"make test"
compression,"mocha --check-leaks --reporter spec --bail"
concat-stream,"tape test/*.js test/server/*.js"
config,"./node_modules/vows/bin/vows test/*.js --spec"
configstore,"xo && ava"
connect-flash,"NODE_PATH=lib node_modules/.bin/vows test/*-test.js"
connect-history-api-fallback,"jest && eslint lib/*.js test/*.js"
connect-mongo,"run-s build test:*"
connect,"mocha --require test/support/env --reporter spec --bail --check-leaks test/"
connect-redis,"nyc tape "test/*-test.js""
consolidate,"eslint . && mocha"
content-type,"mocha --reporter spec --check-leaks --bail test/"
convert-source-map,"tap test/*.js --color"
cookie,"mocha --reporter spec --bail --check-leaks --ui qunit test/"
cookie-parser,"mocha --reporter spec --bail --check-leaks test/"
co,"mocha --harmony"
copy-webpack-plugin,"npm-run-all -l -p "lint:**" && cross-env NODE_ENV=test jest --collectCoverageFrom="src/**/*.js" --coverage"
core-js,"run-s init test-lint bundle test-unit test-promises test-observables test-entries test-targets-parser"
cors,"eslint lib test && nyc --reporter=html --reporter=text mocha --require test/support/env"
cosmiconfig,"jest --coverage"
coveralls,"xo && _mocha -b -R spec"
crc,"rm -fr lib; babel --out-dir ./lib/es6 *.js; cd commonjs; babel --out-dir ../lib *.js && eslint *.js test/{,**/}*.js && mocha test/*.test.js && ./webpack-test/test.sh"
create-hash,"npm run-script standard && npm run-script unit"
create-react-class,"node ./scripts/jest/jest-cli.js"
cron,"jest --coverage"
cross-env,"kcd-scripts test"
cross-fetch,""
cross-spawn,"jest --env node --coverage"
crypto-js,""
crypto,"echo "Error: no test specified" && exit 1"
css-loader,"npm-run-all -l -p "lint:**" && cross-env NODE_ENV=test jest --collectCoverageFrom="src/**/*.js" --coverage"
cssnano,"yarn lint && yarn test:coverage"
css,"mocha --require should --reporter spec test/*.js"
csv,"mocha test/**/*.{coffee,ts}"
csv-parse,"cd lib && babel *.js -d es5 && cd .. && browserify lib/index.js --transform babelify --standalone parse > lib/browser/index.js && browserify lib/sync.js --transform babelify --standalone parse > lib/browser/sync.js && eslint lib/*.js && TS_NODE_COMPILER_OPTIONS='{"strictNullChecks":true}' mocha test/**/*.{coffee,ts}"
cuid,""
d3-array,"mocha 'test/**/*-test.js' && eslint src test"
d3,"mocha 'test/**/*-test.js' && eslint src test"
d3-scale,"TZ=America/Los_Angeles mocha 'test/**/*-test.js' && eslint src test"
d3-selection,"mocha 'test/**/*-test.js' && eslint src test"
d3-shape,"mocha 'test/**/*-test.js' && eslint src test"
date-fns,"karma start config/karma.js"
dateformat,"./node_modules/.bin/babel src --out-dir lib && uglifyjs lib/dateformat.js -o lib/dateformat.js && mocha"
dayjs,"TZ=Pacific/Auckland npm run test-tz && TZ=Europe/London npm run test-tz && TZ=America/Whitehorse npm run test-tz && date && jest test/timezone.test --coverage=false && jest"
deasync,"node spec"
debounce,"minijasminenode test.js"
debug,"istanbul cover _mocha -- test.js && karma start --single-run && xo"
decamelize,"xo && ava && tsd"
decompress,"xo && ava"
deep-assign,"xo && ava"
deep-diff,"eslint index.js test && mocha test/**/*.js"
deep-equal,"eslint . && nyc tape 'test/**/*.js' && npx aud --production"
deep-extend,"./node_modules/.bin/mocha"
deepmerge,"rollup -c && tape test/*.js && jsmd readme.md && tsc --noEmit test/typescript.ts && ts-node test/typescript.ts"
del,"xo && ava && tsd"
depd,"mocha --reporter spec --bail test/"
detect-port,"egg-bin test"
diff,"grunt"
discord.js,"eslint src && docgen --source src --custom docs/index.yml && tslint typings/index.d.ts"
dockerode,"./node_modules/mocha/bin/mocha -R spec --exit"
dom-helpers,"karma start --single-run"
dotenv,"standard && dtslint types && tap tests/*.js --100"
dot,"if-node-version '>=4' eslint *.js --ignore-pattern *.min.js && nyc npm run test-spec"
download,"xo && ava"
draft-js,"node node_modules/fbjs-scripts/node/check-dev-engines.js package.json && cross-env NODE_ENV=test jest"
echarts,"npx jest --config test/ut/jest.config.js"
ejs,"mocha"
elasticsearch,"grunt test"
electron,"node ./script/spec-runner.js"
element-resize-detector,"grunt test"
element-ui,"eslint src/**/* test/**/* packages/**/* build/**/* --quiet && node build/bin/gen-cssfile && gulp build --gulpfile packages/theme-chalk/gulpfile.js && cp-cli packages/theme-chalk/lib lib/theme-chalk && cross-env CI_ENV=/dev/ BABEL_ENV=test karma start test/unit/karma.conf.js --single-run"
elliptic,"eslint lib test && istanbul test _mocha --reporter=spec test/index.js"
ember-cli-babel,"mocha node-tests && ember test"
ember-cli-htmlbars,"ember test && mocha node-tests/*.js"
envify,"node test.js | tap-spec"
enzyme-adapter-react-16,"lerna run lint && mocha --recursive packages/enzyme-test-suite/build"
enzyme,"lerna run lint && mocha --recursive packages/enzyme-test-suite/build"
errorhandler,"mocha --reporter spec --bail --check-leaks test/"
es6-error,"cross-env BABEL_ENV=test mocha --require babel-core/register --recursive"
es6-promise,"ember test"
es6-promisify,"babel lib/promisify.js -o dist/promisify.mjs --config-file ./babel.config-module.js && babel lib/promisify.js -o dist/promisify.js --config-file ./babel.config-nomodule.js && tape test"
es6-shim,"eslint es6-shim.js test/*.js test/*/*.js && eslint es6-sham.js test-sham/*.js && evalmd *.md && NODE_OPTIONS='--unhandled-rejections=none' npm run tests-only && aud --production"
escape-html,"mocha test/"
escape-string-regexp,"xo && ava && tsd"
escodegen,"gulp travis"
eslint-config-airbnb-base,""
eslint-config-airbnb,""
eslint-config-prettier,"eslint . && prettier --check . && jest && node ./bin/cli.js index.js && node ./bin/cli.js react.js ./bin/cli.js && node scripts/build.js"
eslint-config-react-app,"cd packages/react-scripts && node bin/react-scripts.js test"
eslint-config-standard,"eslint . --config=eslintrc.json && tape test/*.js"
eslint-loader,"npm-run-all -l -p "lint:**" && cross-env NODE_ENV=test jest --collectCoverageFrom="src/**/*.js" --coverage"
eslint,"node Makefile.js test"
eslint-plugin-babel,"mocha ./tests/rules/*.js"
eslint-plugin-flowtype,"mocha --require @babel/register ./tests/rules/index.js"
eslint-plugin-import,"linklocal && cross-env BABEL_ENV=test nyc -s mocha tests/src && eslint ."
eslint-plugin-jest,"jest"
eslint-plugin-jsx-a11y,"eslint  --config .eslintrc src __tests__ __mocks__ scripts --fix && if [ ! -e ./.flowconfig ]; then echo "Could not find .flowconfig"; else flow; test $? -eq 0 -o $? -eq 2; fi && jest --coverage __tests__/**/* && aud --production"
eslint-plugin-node,""
eslint-plugin-prettier,"eslint . && mocha"
eslint-plugin-promise,"jest"
eslint-plugin-react-hooks,"node ./scripts/jest/jest-cli.js"
eslint-plugin-react,"eslint ./ && istanbul cover node_modules/mocha/bin/_mocha tests/lib/**/*.js tests/util/**/*.js tests/index.js && aud --production"
eslint-plugin-standard,"standard && mocha tests/"
eslint-plugin-vue,"nyc npm run test:base -- "tests/integrations/*.js" --timeout 60000"
esm,"node script/build.js --test && node script/test.js"
esprima,"tsc -p src/ && webpack && node tools/fixupbundle.js && node test/verify-line-ending.js && node tools/generate-fixtures.js && node test/unit-tests.js && mocha -R dot test/api-tests.js && node test/grammar-tests.js && node test/regression-tests.js && node test/hostile-environment-tests.js && node test/check-version.js && eslint src/*.ts && tsfmt --verify src/*.ts && tsfmt --verify test/*.js && istanbul cover test/unit-tests.js && istanbul check-coverage --statement 100 --branch 100 --function 100"
estraverse,"npm run-script lint && npm run-script unit-test"
etag,"mocha --reporter spec --bail --check-leaks test/"
ethereumjs-tx,"ts-node node_modules/tape/bin/tape ./test/index.ts"
ethereumjs-util,"tape -r ts-node/register test/*.spec.ts && karma start karma.conf.js"
eventemitter2,"mocha ./test/loader.js --exit --timeout=3000"
eventemitter3,"c8 --reporter=lcov --reporter=text mocha test/test.js"
events,"node tests/index.js"
event-stream,"asynct test/"
execa,"xo && nyc ava && tsd"
express,"mocha --require test/support/env --reporter spec --bail --check-leaks test/ test/acceptance/"
express-session,"mocha --require test/support/env --check-leaks --bail --no-exit --reporter spec test/"
extend,"eslint . && covert test && npx aud"
extend-shallow,"mocha"
extract-text-webpack-plugin,"jest"
extract-zip,"yarn lint && ava"
faker,"node_modules/.bin/mocha test/*.*.js"
fancy-log,"eslint . && mocha --async-only"
fastclick,""
fast-glob,"mocha "out/**/*.spec.js" -s 0"
fbjs,""
figlet,"grunt test"
figures,"xo && ava && tsd"
file-loader,"npm-run-all -l -p "lint:**" && cross-env NODE_ENV=test jest --collectCoverageFrom="src/**/*.js" --coverage"
file-saver,"echo "Error: no test specified" && exit 0"
filesize,"rollup -c && eslint test/*.js src/*.js && nodeunit test/*.js"
file-type,"xo && ava && tsd"
finalhandler,"mocha --reporter spec --bail --check-leaks test/"
find-up,"xo && ava && tsd"
findup-sync,"eslint . && nyc mocha --async-only"
firebase-admin,"run-s lint test:unit"
firebase,"node tools/pretest.js && lerna run --concurrency 4 --stream test"
flat,"mocha -u tdd --reporter spec && standard cli.js index.js test/index.js"
fluent-ffmpeg,"make test"
flux,"NODE_ENV=test jest"
follow-redirects,"eslint *.js test && nyc mocha"
fork-ts-checker-webpack-plugin-alt,"tsc --version && tsc --project "./src" && mocha -R spec ./test/unit && mocha -R spec ./test/integration && rimraf tmp"
fork-ts-checker-webpack-plugin,"yarn build && yarn test:unit && yarn test:e2e"
form-data,"rimraf coverage test/tmp && istanbul cover test/run.js && istanbul report lcov text"
formidable,"del-cli ./test/tmp && make-dir ./test/tmp && jest --coverage"
@fortawesome-react-fontawesome,"npm --no-save install @fortawesome/fontawesome-svg-core@latest @fortawesome/free-solid-svg-icons@latest && jest --silent && npm --no-save install @fortawesome/fontawesome-svg-core@next @fortawesome/free-solid-svg-icons@next && jest --silent"
friendly-errors-webpack-plugin,"eslint --ignore-pattern 'test/*' . && jest"
front-matter,"make test && check-dts"
fsevents,"/bin/bash ./test.sh 2>/dev/null"
fs-extra,"standard && node test.js"
fs,""
fs-promise,"mocha"
fstream,"standard && tap examples/*.js"
fuse.js,"jest"
fuzzy,"./node_modules/.bin/mocha"
gaze,"semistandard && grunt nodeunit -v"
generic-pool,"tap test/*-test.js"
get-port,"xo && ava && tsd"
get-stdin,"xo && ava test.js test-buffer.js && echo unicorns | node test-real.js && tsd"
gh-pages,"eslint lib test bin plugin.js && mocha --recursive test"
github,""
global,"node ./test"
globby,"xo && ava && tsd"
glob,"tap"
gm,"make test;"
googleapis,"cross-env NODE_OPTIONS=--max-old-space-size=8192 tsc -p tsconfig.test.json && c8 mocha build/test"
got,"xo && ava"
graceful-fs,"nyc --silent node test.js | tap -c - && nyc report"
graphql,"eslint --cache --max-warnings 0 . && tsc --pretty && mocha --full-trace src/**/__tests__/**/*-test.ts && prettier --check . && cspell --no-progress '**/*' && node resources/build-npm.js && node resources/build-deno.js && mocha --full-trace integrationTests/*-test.js"
graphql-tag,"mocha test/graphql.js"
graphql-tools,"jest --no-watchman --forceExit"
gray-matter,"mocha"
grpc,"nyc gulp test"
grunt-cli,"node bin/grunt test"
grunt-contrib-clean,"grunt test"
grunt-contrib-concat,"grunt test"
grunt-contrib-copy,"grunt test"
grunt-contrib-jshint,"grunt test"
grunt-contrib-uglify,"grunt test"
grunt-contrib-watch,"grunt test -v"
grunt,"node bin/grunt test"
gulp-autoprefixer,"xo && ava"
gulp-babel,"xo && mocha"
gulp-clean-css,"./node_modules/.bin/mocha ./index.spec.js"
gulp-concat,"mocha"
gulp-conflict,"NODE_ENV=test mocha -R spec"
gulp-eslint,"gulp && mocha"
gulp-filter,"xo && mocha"
gulp-if,"mocha && jshint ."
gulp-imagemin,"xo && ava"
gulp-install,"NODE_ENV=test mocha -R spec"
gulp-jshint,"gulp test"
gulp-less,"jshint index.js && node_modules/.bin/mocha"
gulp-load-plugins,"eslint . --ignore-path .gitignore && NODE_PATH=test/global_modules mocha"
gulp-notify,"mocha -R spec"
gulp,"eslint . && nyc mocha --async-only"
gulp-plumber,"xo && mocha -R spec"
gulp-postcss,"eslint *.js && nyc mocha test.js"
gulp-rename,"prettier --single-quote --write index.js test/**/*.js && mocha"
gulp-replace,"mocha"
gulp-sass,"./node_modules/.bin/mocha test"
gulp-shell,"gulp test"
gulp-sourcemaps,"eslint . && mocha --async-only"
gulp-template,"xo && mocha test.js"
gulp-typescript,"gulp"
gulp-uglify,"tape test/*.js"
gulp-util,"jshint *.js lib/*.js test/*.js && mocha"
gulp-watch,"xo --ignore ./test/fixtures/ && mocha -r test/util/set-default-options -t 5000 -R spec test/test-*"
gzip-size,"xo && ava && tsd"
hammerjs,"rollup -c && node string-replace.js && uglifyjs hammer.js --source-map "filename=hammer.min.js.map" -o hammer.min.js --timings && bannerize hammer.js hammer.min.js && jshint src/**/*.js tests/unit/*.js tests/unit/gestures/*.js --config .jshintrc --verbose --reporter=node_modules/jshint-stylish && jscs src/**/*.js tests/unit/*.js tests/unit/gestures/*.js --config=./.jscsrc && phantomjs node_modules/qunit-phantomjs-runner/runner-list.js tests/unit/index.html 15"
handlebars,"grunt"
hapi,"lab -a @hapi/code -t 100 -L -m 5000"
hash-sum,"jshint . && tape test.js"
helmet,"eslint "**/*.ts" && prettier --check "**/*{md,js,json,ts}" && jest"
he,"node tests/tests.js"
hexlet-pairs,"npx -n --experimental-vm-modules -n --no-warnings jest --colors"
highland,"eslint Gruntfile.js lib test/test.js && nodeunit test/test.js"
highlight.js,"mocha test"
hiredis,"node test/reader.js && node test/writer.js"
history,"node ./scripts/test.js"
hoek,"lab -a @hapi/code -t 100 -L -Y"
hogan.js,""
hoist-non-react-statics,"nyc mocha tests/unit/ --recursive --reporter spec --require=@babel/register"
html-entities,"TS_NODE_COMPILER=ttypescript mocha --recursive -r ts-node/register test/**/*.ts"
html-loader,"npm-run-all -l -p "lint:**" && cross-env NODE_ENV=test jest --coverage"
html-minifier,"grunt test"
htmlparser2,"jest --coverage"
html-webpack-plugin,"semistandard && jest --runInBand --verbose --coverage && tsc"
http-errors,"mocha --reporter spec --bail"
http,""
http-proxy-middleware,"yarn build && jest"
http-proxy,"nyc --reporter=text --reporter=lcov npm run mocha"
http-server,"common bin/http-server lib/ test && vows --spec --isolate"
https-proxy-agent,"mocha --reporter spec"
http-status-codes,"jest ./src"
http-status,"coffee -b -o lib src && cp src/index.d.ts lib && mocha "test/**/*.{coffee,ts}""
hyperquest,"tape test/*.js"
i18next,"tslint --project tsconfig.json && tslint --project tsconfig.nonEsModuleInterop.json && karma start karma.conf.js --singleRun && karma start karma.backward.conf.js --singleRun"
iconv-lite,"mocha --reporter spec --grep ."
identity-obj-proxy,"node --harmony_proxies node_modules/.bin/jest"
imagemin,"xo && ava"
imagemin-pngquant,"xo && ava && tsd"
image-size,"eslint --ext .ts,.js bin lib specs && nyc mocha"
immer,"jest && yarn test:build && yarn test:flow"
immutability-helper,"rimraf ./coverage index.js && tslint -p tsconfig.test.json && jest --coverage && node smoke-test.js"
immutable,"run-s format build lint testonly test:types:*"
inert,"lab -f -a @hapi/code -t 100 -L"
inflection,"mocha -R spec"
inherits,"tap"
ini,"tap && eslint ini.js test/*.js"
iniparser,""
inquirer-autocomplete-prompt,"npm run-script lint && flow && nyc --reporter=lcov mocha test/spec --scripts-prepend-node-path && nyc check-coverage --statements 85 --branches 85 --functions 85 --lines 85 && rm -rf coverage"
inquirer,"eslint . && jest --coverage && lerna exec npm test --scope inquirer"
install,"mocha --reporter spec --full-trace test/run.js"
intl,"eslint . && cd tests && node polyfilling.js && node sanity.js && node disableregexprestore.js && node noderunner.js && node saucelabs.js"
invariant,"NODE_ENV=production tap test/*.js && NODE_ENV=development tap test/*.js"
inversify,"tslint --project . && nyc --require ts-node/register mocha test/**/*.test.ts --reporter spec --retries 3 --require 'node_modules/reflect-metadata/Reflect.js' --exit"
ioredis,"TS_NODE_TRANSPILE_ONLY=true TS_NODE_LOG_ERROR=true NODE_ENV=test mocha "test/helpers/*.ts" "test/**/*.ts""
i,"./node_modules/.bin/vows --spec $(find test -name '*-test.js')"
ip,"jscs lib/*.js test/*.js && jshint lib/*.js && mocha --reporter spec test/*-test.js"
isobject,"mocha -r esm"
isomorphic-fetch,"jshint `npm run -s files` && lintspaces -i js-comments -e .editorconfig `npm run -s files` && mocha"
is,""
is-plain-object,"mocha -r esm && rollup -c && mocha-headless-chrome --args=disable-web-security -f test/browser.html"
is-promise,"node test"
istanbul,"jshint index.js lib/ test/ && ./download-escodegen-browser.sh && node --harmony test/run.js && node ./lib/cli.js check-coverage --statements 95 --branches 80"
is-url,"mocha --reporter spec"
is-wsl,"xo && ava && tsd"
iview,"gulp --gulpfile build/build-style.js && webpack --config build/webpack.dist.dev.config.js && webpack --config build/webpack.dist.prod.config.js && eslint --fix --ext .js,.vue src"
jade,"yarn build && jest"
jest-environment-jsdom-fourteen,"jest"
jest,"yarn lint && yarn jest"
jest-pnp-resolver,""
jest-resolve,"yarn lint && yarn jest"
jest-watch-typeahead,"jest"
jimp,"cross-env BABEL_ENV=test mocha --require @babel/register './packages/**/test/**/*.test.js' --require ts-node/register ./packages/**/test/*.test.ts"
joi,"lab -t 100 -a @hapi/code -L -Y"
jquery,"grunt test:prepare && grunt custom:slim && grunt karma:main && grunt test:prepare && grunt custom:-deprecated && grunt karma:main && grunt && grunt test:slow && grunt karma:main && grunt karma:esmodules && grunt karma:amd"
jquery-ui,"grunt"
js-base64,"make clean && make test"
js-beautify,""
js-cookie,"grunt test"
jsdoc,"gulp"
jsdom,"yarn prepare && yarn init-wpt && mocha test/index.js"
jshint,"node ./bin/jshint src && jscs src && nodeunit tests/unit && nodeunit tests/cli.js && nodeunit tests/regression && node tests/browser"
json5,"tap -Rspec --100 test"
jsonfile,"standard && mocha"
json-loader,""
jsonschema,"./node_modules/.bin/mocha -R spec"
json-stable-stringify,"tape test/*.js"
JSONStream,"node test/run.js"
json-stringify-safe,"make test"
jsonwebtoken,"eslint . && nyc mocha --use_strict && cost-of-modules"
js-yaml,"eslint . && mocha"
jszip,"qunit --require ./test/helpers/test-utils.js --require ./test/helpers/node-test-utils.js test/asserts/ && grunt build && grunt test"
@jupyterlab-application,"lerna run test --scope "@jupyterlab/*" --concurrency 1 --stream"
jwt-decode,"mocha"
jwt-simple,"istanbul cover _mocha test/*.js"
karma-chrome-launcher,"standard && grunt test"
karma-jasmine,"jasmine && grunt"
karma-mocha,"grunt test"
karma,"mocha "test/unit/**/*.spec.js" && cucumber-js test/e2e/*.feature && node bin/karma start test/client/karma.conf.js"
karma-phantomjs-launcher,"echo "Error: no test specified" && exit 1"
keycode,"mocha test/keycode.js"
keypress,"echo "Error: no test specified" && exit 1"
knex,"mocha --exit -t 10000 --config test/mocha-all-config-test.js && node test/tape/index.js | tap-spec && cross-env KNEX_PATH=../knex.js KNEX=bin/cli.js jake -f test/jake/Jakefile"
koa-body,"mocha test/unit/"
koa-bodyparser,"mocha --require should test/*.spec.js --exit"
koa-compose,"jest --forceExit --coverage"
koa-logger,"xo && mocha --exit"
koa-mount,"NODE_ENV=test mocha --reporter spec"
koa,"egg-bin test test"
koa-router,"mocha test/**/*.js"
koa-static,"mocha --harmony --reporter spec --exit"
leaflet,"eslint src spec/suites docs/docs/js && karma start ./spec/karma.conf.js"
left-pad,"node test"
less-loader,"npm-run-all -l -p "lint:**" && cross-env NODE_ENV=test jest --collectCoverageFrom="src/**/*.js" --coverage"
less,"cd packages/less && npm test"
leveldown,"standard && (nyc -s tape test/*-test.js | faucet) && nyc report"
level,"standard && nyc node test.js"
levelup,"standard && hallmark && (nyc -s node test/self.js | faucet) && nyc report"
liftoff,"eslint . && mocha -t 5000 -b -R spec test/index"
lint-staged,"eslint . && jest --coverage"
listr,"clinton && xo && nyc ava"
lit-element,"tsc && rm -rf ./ts3.4 && downlevel-dts . ts3.4 && cp tsconfig.json ./ts3.4/ && babel src/test/lib/decorators_test.ts --out-file test/lib/decorators-babel_test.js && wct"
loader-utils,"yarn lint && jest"
localforage,"node -e "require('grunt').cli()" null test"
lodash.assign,"mocha -r esm test/*.test.js"
lodash.camelcase,"mocha -r esm test/*.test.js"
lodash.clonedeep,"mocha -r esm test/*.test.js"
lodash.debounce,"mocha -r esm test/*.test.js"
lodash.defaults,"mocha -r esm test/*.test.js"
lodash-es,"mocha -r esm test/*.test.js"
lodash.flatten,"mocha -r esm test/*.test.js"
lodash.foreach,"mocha -r esm test/*.test.js"
lodash.get,"mocha -r esm test/*.test.js"
lodash.isempty,"mocha -r esm test/*.test.js"
lodash.isequal,"mocha -r esm test/*.test.js"
lodash.isfunction,"mocha -r esm test/*.test.js"
lodash.isobject,"mocha -r esm test/*.test.js"
lodash.isplainobject,"mocha -r esm test/*.test.js"
lodash.isstring,"mocha -r esm test/*.test.js"
lodash.map,"mocha -r esm test/*.test.js"
lodash.merge,"mocha -r esm test/*.test.js"
lodash.omit,"mocha -r esm test/*.test.js"
lodash,"mocha -r esm test/*.test.js"
lodash.pick,"mocha -r esm test/*.test.js"
lodash.set,"mocha -r esm test/*.test.js"
lodash.template,"mocha -r esm test/*.test.js"
lodash.throttle,"mocha -r esm test/*.test.js"
lodash.uniq,"mocha -r esm test/*.test.js"
log4js,"eslint "lib/**/*.js" "test/**/*.js" && tap "test/tap/**/*.js" --cov"
loglevel,"grunt test && tsc --noEmit ./test/type-test.ts"
log-symbols,"xo && ava && tsd"
log-update,"xo && ava && tsd"
long,"node tests"
loose-envify,"tap test/*.js"
lowdb,"del-cli lib && tsc && xv lib"
lru-cache,"tap"
make-dir,"xo && nyc ava && tsd"
map-stream,"asynct test/"
markdown-it,"eslint . && nyc mocha && node support/specsplit.js"
markdown,"grunt test"
marked,"jasmine --config=jasmine.json"
@material-ui-core,"yarn lint && yarn typescript && yarn test:coverage"
@material-ui-icons,"yarn lint && yarn typescript && yarn test:coverage"
material-ui,"yarn lint && yarn typescript && yarn test:coverage"
mathjs,"mocha test/unit-tests --recursive --forbid-only && standard --env=mocha --env=worker"
md5-file,"standard && mocha"
md5,"mocha"
memoize-one,"yarn jest"
memory-fs,"mocha"
meow,"xo && ava && tsd"
merge,"./node_modules/.bin/mocha lib/test/index.js"
merge-stream,"istanbul cover test.js && istanbul check-cover --statements 100 --branches 100"
metalsmith,"npm install && mocha $HARMONY_OPTS"
method-override,"mocha --check-leaks --reporter spec --bail test/"
methods,"mocha --reporter spec --bail --check-leaks test/"
micromatch,"mocha"
mime,"mocha src/test.js"
mime-types,"mocha --reporter spec test/test.js"
mini-css-extract-plugin,"npm-run-all -l -p "lint:**" && cross-env NODE_ENV=test npm run test:coverage"
minimatch,"tap test/*.js --cov"
minimist,"tap test/*.js"
mkdirp,"tap"
mobx,"jest"
mobx-react,"jest"
mocha,"nps test"
mockjs,"grunt travis --verbose"
moment,"grunt test"
moment-timezone,"grunt"
mongodb,"rimraf lib && tsc && api-extractor run && rimraf 'lib/**/*.d.ts*' && tsc --noEmit mongodb.d.ts && eslint -v && eslint --max-warnings=0 --ext '.js,.ts' src test && mocha --recursive test/functional test/unit"
mongoose,"mocha --exit ./test/*.test.js ./test/typescript/main.test.js"
morgan,"mocha --check-leaks --reporter spec --bail"
mqtt,"standard | snazzy && node_modules/.bin/nyc --reporter=lcov --reporter=text ./node_modules/mocha/bin/_mocha"
ms,"mocha tests.js"
mssql,"standard && node_modules/.bin/mocha --exit -t 15000 test/common/unit.js"
multer,"standard && mocha"
multimatch,"xo && ava && tsd"
mustache,"eslint mustache.js bin/mustache test/*.js test/**/*.js && mocha --reporter spec test/*-test.js"
mysql2,"eslint Contributing.md "documentation/**/*.md" "examples/*.js" && eslint index.js promise.js "lib/**/*.js" "test/**/*.js" "benchmarks/**/*.js" && node ./test/run.js"
mysql,"node test/run.js"
mz,"mocha --reporter spec"
nanoid,"jest --coverage && eslint . && check-dts && size-limit && yaspeller *.md"
nan,"tap --gc --stderr test/js/*-test.js"
nconf,"jest --verbose"
ncp,"mocha -R spec"
nedb,"./node_modules/.bin/mocha --reporter spec --timeout 10000"
needle,"mocha test"
nib,"mocha"
nock,"nyc mocha tests"
node-cache,"nyc --require coffee-script/register mocha _src/test/mocha_test.coffee -R spec && tsc"
node-dir,"./node_modules/.bin/mocha --reporter spec"
node-emoji,"./node_modules/.bin/mocha --require should --bail --reporter spec test/*"
node.extend,""
node-fetch,"node --experimental-modules node_modules/c8/bin/c8 --reporter=html --reporter=lcov --reporter=text --check-coverage node --experimental-modules node_modules/mocha/bin/mocha"
node-forge,"cross-env NODE_ENV=test mocha -t 30000 -R ${REPORTER:-spec} tests/unit/index.js"
nodegit,"jshint lib test/tests test/utils lifecycleScripts && node --expose-gc test"
node-gyp,"standard */*.js test/**/*.js && tap --timeout=120 test/test-*"
nodemailer,"grunt"
nodemon,"eslint lib/**/*.js && for FILE in test/**/*.test.js; do echo $FILE; TEST=1 mocha --exit --timeout 30000 $FILE; if [ $? -ne 0 ]; then exit 1; fi; sleep 1; done"
node-notifier,"eslint example/*.js lib/*.js notifiers/*.js test/**/*.js index.js && jest"
node-pre-gyp,"tape test/*test.js"
node-sass,"mocha test/{*,**/**}.js"
node-schedule,"tape test/*.js"
node-static,"nyc npm run vows"
node-uuid,"mocha test/test.js"
node-watch,"mocha test/test.js --exit --slow 500"
nomnom,"./node_modules/.bin/nodeunit test/*.js"
nopt,"tap test/*.js"
normalize.css,""
normalize-url,"xo && nyc ava && tsd"
npmlog,"standard && tap test/*.js"
npm,"tap && eslint test/lib test/bin lib scripts docs smoke-tests"
npm-run-all,"node scripts/make-slink.js && eslint bin lib scripts test "test-workspace/tasks/*.js" && nyc --require babel-register npm run _mocha"
nprogress,"mocha"
numeral,"grunt"
nunjucks,"eslint nunjucks scripts tests && cross-env NODE_ENV=test scripts/bundle.js && cross-env NODE_ENV=test NODE_PATH=tests/test-node-pkgs scripts/testrunner.js"
nyc,"standard && node ./npm-run-clean.js && node ./build-self-coverage.js && tap && node ./bin/nyc report --temp-dir ./.self_coverage/ -r text -r lcov"
oauth,"make test"
object-assign,"xo && ava"
object.assign,"eslint . && es-shim-api --bound && nyc node test && nyc node test/shimmed && node test/ses-compat && aud --production"
object-hash,"node ./node_modules/.bin/mocha test"
object-path,"mocha test.js"
@oclif-command,"yarn build --noEmit && tsc -p test --noEmit && mocha --forbid-only "test/**/*.test.ts" && yarn lint"
@oclif-config,"yarn build --noEmit && tsc -p test --noEmit && mocha --forbid-only "test/**/*.test.ts" && yarn lint"
@oclif-plugin-help,"yarn build --noEmit && tsc -p test --noEmit && mocha --forbid-only "test/**/*.test.ts" && yarn lint"
@octokit-rest,""
once,"tap test/*.js"
on-finished,"mocha --reporter spec --bail --check-leaks test/"
opener,""
open,"xo && tsd"
opn,"xo && tsd"
optimist,"tap ./test/*.js"
optimize-css-assets-webpack-plugin,"jest"
ora,"xo && ava && tsd"
osenv,"tap test/*.js"
os,"echo "Error: no test specified" && exit 1"
pako,"eslint . && mocha"
parse5,"eslint . && mocha --ui exports --reporter progress --timeout 20000 packages/**/test/*.test.js"
parseurl,"mocha --check-leaks --bail --reporter spec test/"
passport-local,"make test"
passport-oauth2,"node_modules/.bin/mocha --reporter spec --require test/bootstrap/node test/*.test.js test/**/*.test.js"
passport-oauth,"make test"
passport,"node_modules/.bin/mocha --reporter spec --require test/bootstrap/node test/*.test.js test/**/*.test.js"
passport-strategy,"node_modules/.bin/mocha --reporter spec --require test/bootstrap/node test/*.test.js"
path-exists,"xo && ava && tsd"
path-is-absolute,"xo && node test.js"
path,""
path-to-regexp,"rimraf dist/ dist.es2015/ && tsc && tsc -P tsconfig.es2015.json && tslint "src/**/*" --project tsconfig.json && jest --coverage && size-limit"
pg,"yarn build && yarn lerna exec yarn test"
phantomjs,"nodeunit --reporter=minimal test/tests.js && eslint ."
phantomjs-prebuilt,"nodeunit --reporter=minimal test/tests.js && eslint ."
@phosphor-widgets,"lerna run test"
pify,"xo && ava"
pino,"eslint . && tap --100 test/*test.js test/*/*test.js"
pkginfo,"vows test/*-test.js --spec"
plist,"make test"
plugin-error,"eslint . && jscs index.js test/ && mocha --async-only && tsc -p test/types"
pluralize,"semistandard && istanbul cover node_modules/mocha/bin/_mocha -- -R spec --bail"
pm2,"bash test/unit.sh && bash test/e2e.sh"
pngjs,"yarn lint && yarn prettier:check && tape test/*-spec.js | tap-dot && node test/run-compare"
pnp-webpack-plugin,""
polished,"jest src"
@polymer-polymer,"gulp lint && polymer test --npm --module-resolution=node"
popper.js,"yarn test:unit && yarn test:functional"
portfinder,"vows test/*-test.js --spec"
postcss-cssnext,"eslint --ignore-path .gitignore . && babel src --out-dir lib && tape "lib/__tests__/*.js""
postcss-flexbugs-fixes,"gulp"
postcss-import,"eslint . --fix && ava"
postcss-loader,"npm-run-all -l -p "lint:**" && cross-env NODE_ENV=test jest --collectCoverageFrom="src/**/*.js" --coverage"
postcss-nested,"jest --coverage && eslint . && check-dts"
postcss-normalize,"npm install && npx rollup -c .rollup.js && npx eslint --cache src && npx postcss-tape"
postcss,"jest --coverage && eslint . && ./test/version.js && check-dts && ./test/integration.js && yaspeller *.md docs/{**/,}*.md && size-limit"
postcss-preset-env,"eslint src/*.js src/lib/*.js src/patch/*.js --cache --ignore-path .gitignore --quiet && postcss-tape"
postcss-safe-parser,"jest --coverage && eslint . && ./test/integration.js"
pouchdb,"bash bin/run-test.sh && eslint bin/ packages/node_modules/**/src tests/"
preact,"npm-run-all build lint test:unit"
prettier,"jest"
pretty-bytes,"xo && ava && tsd"
pretty-error,"mocha "test/**/*.coffee""
prettyjson,"jshint lib/*.js test/*.js && mocha --reporter spec"
pretty-ms,"xo && ava && tsd"
prismjs,"npm-run-all test:*"
process,"mocha test.js"
progress-bar-webpack-plugin,"echo "Error: no test specified" && exit 1"
progress,""
promise,"node build && mocha --bail --timeout 200 --slow 99999 -R dot && node --expose-gc test/memory-leak.js"
promise-polyfill,"rollup -i src/index.js -o lib/index.js -f cjs && eslint src && google-closure-compiler --js=src/*.js --checks_only --module_resolution=node --compilation_level=ADVANCED && tsc --checkJS --allowJS --noEmit src/index.js && mocha && karma start --single-run"
prompt,"vows test/prompt-test.js --spec"
prompts,"tape test/*.js | tap-spec"
prop-types,"eslint . && jest"
protobufjs,"tape -r ./lib/tape-adapter tests/*.js tests/node/*.js && tsc tests/comp_typescript.ts --lib es2015 --strictNullChecks --experimentalDecorators --emitDecoratorMetadata && tsc tests/data/test.js.ts --lib es2015 --noEmit --strictNullChecks && tsc tests/data/*.ts --lib es2015 --noEmit --strictNullChecks"
pull-stream,"tape test/*.js | tap-bail | tap-spec"
pump,"node test-browser.js && node test-node.js"
puppeteer,"rimraf lib && tsc --version && tsc -b src/tsconfig.cjs.json && tsc -b src/tsconfig.esm.json && ([ "$CI" = true ] && eslint --ext js --ext ts --quiet -f codeframe . || eslint --ext js --ext ts .) && rimraf lib && tsc --version && tsc -b src/tsconfig.cjs.json && tsc -b src/tsconfig.esm.json && rimraf new-docs && rimraf docs-api-json && api-extractor run --local --verbose && node utils/doclint/cli.js && commitlint --from=HEAD~1 && prettier --check **/README.md docs/troubleshooting.md --silent && cross-env COVERAGE=1 npm run unit && wtr"
q,""
qs,""
query-string,"xo && ava && tsd"
querystring,"node ./test/common-index.js && node ./test/tap-index.js"
quill,""
raf,"node test.js"
ramda,"cross-env BABEL_ENV=cjs mocha --require @babel/register --reporter spec && eslint scripts/bookmarklet scripts/*.js source/*.js source/internal/*.js test/*.js test/**/*.js lib/sauce/*.js lib/bench/*.js"
randombytes,"standard && node test.js | tspec"
randomstring,"mocha"
raven,"lerna run --stream --concurrency 1 --sort test"
raw-body,"mocha --trace-deprecation --reporter spec --bail --check-leaks test/"
raw-loader,"npm-run-all -l -p "lint:**" && cross-env NODE_ENV=test jest --collectCoverageFrom="src/**/*.js" --coverage"
rc,"set -e; node test/test.js; node test/ini.js; node test/nested-env-vars.js"
rc-slider,"father test"
rc-util,"father test"
react-addons-css-transition-group,"node ./scripts/jest/jest-cli.js"
react-addons-shallow-compare,"node ./scripts/jest/jest-cli.js"
react-apollo,""
react-app-polyfill,"cd packages/react-scripts && node bin/react-scripts.js test"
react-bootstrap,"eslint --ext tsx --ext ts src && tsc --noEmit && cross-env NODE_ENV=test karma start --single-run && cross-env NODE_ENV=test-server mocha test/server/*Spec.js"
react-color,"jest && eslint src/**/*.js"
react-datepicker,"cross-env NODE_ENV=test karma start karma.conf.js --single-run"
react-dev-utils,"cd packages/react-scripts && node bin/react-scripts.js test"
react-dnd-html5-backend,""
react-dnd,""
react-dom,"node ./scripts/jest/jest-cli.js"
react-dropzone,"cross-env NODE_ENV=test npm run eslint:src && jest --coverage && npm run typescript"
react-error-overlay,"cd packages/react-scripts && node bin/react-scripts.js test"
react-helmet,"rimraf lib coverage es && eslint --ignore-path .gitignore --fix -- . && karma start karma.config.js && istanbul report lcov text"
react-hot-loader,"yarn test:es2015 && yarn test:modern"
react-icons,""
react-intl,"bazel test //..."
react-lifecycles-compat,"node install.js && rollup -c && jest test.js"
react-markdown,"run-s build format test:*"
react-modal,"cross-env NODE_ENV=test karma start"
react-motion,"cross-env NODE_ENV=test karma start ./karma.conf.js --single-run"
react-native,"jest"
react-native-vector-icons,"eslint index.js {bin,lib}/*.js"
react-onclickoutside,"run-s test:**"
react,"node ./scripts/jest/jest-cli.js"
react-redux,"eslint src test/utils test/components test/hooks && jest"
react-router-dom,"jest --projects ./packages/*/"
react-router,"jest --projects ./packages/*/"
react-router-redux,"eslint examples src test && mocha --compilers js:babel-register --recursive ./test/*.spec.js && karma start"
react-scripts,"cd packages/react-scripts && node bin/react-scripts.js test"
react-slick,"eslint src && jest"
reactstrap,"cross-env SKIP_PREFLIGHT_CHECK=true react-app-rewired test --env=jsdom"
react-tap-event-plugin,"echo "Error: no test specified" && exit 1"
react-test-renderer,"node ./scripts/jest/jest-cli.js"
react-transition-group,"run-p lint:* && jest --verbose"
react-virtualized,"jest --no-watchman --runInBand"
readable-stream,"tap -J --no-esm test/parallel/*.js test/ours/*.js"
readline-sync,""
read,"tap test/*.js"
read-pkg,"xo && ava && tsd"
read-pkg-up,"xo && ava && tsd"
recast,"eslint --ext .ts . && ts-emit-clean && tsc && test/run.sh"
recompose,"jest && flow check && cross-env SNAPSHOT=match npm run build:recompose"
recursive-readdir,"mocha test/"
redis,"nyc --cache mocha ./test/*.spec.js ./test/commands/*.spec.js --timeout=8000 && nyc report --reporter=html"
redux-actions,"jest"
redux-form,"jest"
redux-logger,"eslint src && nyc --all --silent --require babel-core/register mocha --plugins transform-inline-environment-variables --recursive spec/*.spec.js"
redux,"rollup -c && jest"
redux-thunk,"cross-env BABEL_ENV=commonjs mocha --require @babel/register --reporter spec test/*.js"
reflect-metadata,"gulp test"
request,"standard && taper tests/test-*.js && node tests/browser/start.js"
request-promise-native,"./node_modules/.bin/gulp ci"
request-promise,"./node_modules/.bin/gulp ci"
require-all,"node test/test.js"
require-dir,"node test"
requireindex,"node test/test.js"
requirejs,""
reselect,"better-npm-run test"
resize-observer-polyfill,"node ./node_modules/eslint/bin/eslint.js "**/*.js" --ignore-pattern "/dist/" && karma start --browsers Chrome && rollup -c && cpy src/index.js.flow dist --rename=ResizeObserver.js.flow && node tests/node/index.js"
resolve-from,"xo && ava && tsd"
resolve,""
restify,"make prepush"
restler,"node test/all.js"
rimraf,"tap test/*.js"
rollup,"shx rm -rf dist && git rev-parse HEAD > .commithash && rollup -c && shx cp src/rollup/types.d.ts dist/rollup.d.ts && shx chmod a+x dist/bin/rollup && mocha test/test.js && mocha test/browser/index.js && shx rm -rf test/typescript/dist && shx cp -r dist test/typescript/ && tsc --noEmit -p test/typescript && tsc --noEmit && node --expose-gc test/leak/index.js && node scripts/test-package.js"
rollup-plugin-babel,"rollup -c && mocha"
rollup-plugin-commonjs,"shx rm -rf dist/* && rollup -c && mocha && tsc"
rollup-plugin-node-resolve,"rollup -c && mocha && tsc && eslint src test/*.js"
rollup-pluginutils,"rollup -c && shx cp src/pluginutils.d.ts dist/pluginutils.d.ts && jest"
rsvp,"ember test"
run-sequence,"mocha --reporter spec"
rxjs,"tsc -b ./src/tsconfig.cjs.json ./src/tsconfig.cjs.spec.json ./src/tsconfig.esm.json ./src/tsconfig.esm5.json ./src/tsconfig.esm5.rollup.json ./src/tsconfig.types.json ./src/tsconfig.types.spec.json ./spec/tsconfig.json && mocha --config spec/support/.mocharc.js "dist/spec/**/*-spec.js""
rx,"grunt"
safe-buffer,"standard && tape test/*.js"
sanitize-filename,"tape test.js"
sanitize-html,"npx eslint . && mocha test/test.js"
sass-loader,"npm-run-all -l -p "lint:**" && cross-env NODE_ENV=test jest --collectCoverageFrom="src/**/*.js" --coverage"
sax,"tap test/*.js --cov -j4 && standard -F test/*.js lib/*.js"
secp256k1,""
selenium-webdriver,""
semantic-ui-react,"yarn satisfied && gulp build:docs:docgen && cross-env NODE_ENV=test node -r @babel/register ./node_modules/karma/bin/karma start karma.conf.babel.js"
semver,"tap"
send,"mocha --check-leaks --reporter spec --bail"
sequelize,"node scripts/teaser && mocha --require scripts/mocha-bootload --globals setImmediate,clearImmediate --exit --check-leaks --colors -t 30000 --reporter spec "test/unit/**/*.js" && mocha --require scripts/mocha-bootload --globals setImmediate,clearImmediate --exit --check-leaks --colors -t 30000 --reporter spec "test/integration/**/*.test.js""
serialize-javascript,"nyc --reporter=lcov mocha test/unit"
serialport,"nyc --reporter=html --reporter=text --reporter lcovonly mocha"
serve-favicon,"mocha --reporter spec --bail --check-leaks test/"
serve-index,"mocha --reporter spec --bail --check-leaks test/"
serve-static,"mocha --reporter spec --bail --check-leaks test/"
sha1,"mocha"
shallowequal,"jest ."
sharp,"semistandard && cpplint && nyc --reporter=lcov --branches=99 mocha --slow=1000 --timeout=60000 ./test/unit/*.js && license-checker --production --summary --onlyAllow="Apache-2.0;BSD;ISC;MIT""
shelljs,"ava test/*.js && eslint ."
shell-quote,"tape test/*.js"
shortid,"grunt test && size-limit"
should,"rollup --output.format=cjs --output.file=cjs/should.js lib/index.js && rollup --output.format=es --output.file=es6/should.js lib/index.js && mocha -R mocha-better-spec-reporter --require ./cjs/should --color --check-leaks ./test/*.test.js ./test/**/*.test.js"
showdown,"grunt test"
simple-git,"yarn test:consumer && yarn test:jest"
sinon-chai,"mocha"
sinon,"mocha --recursive -R dot "test/**/*-test.js" && mochify --no-detect-globals --recursive -R dot --grep WebWorker --invert --plugin [ proxyquire-universal ] "test/**/*-test.js" && mochify --no-detect-globals --https-server 8080 --no-request-interception test/webworker/webworker-support-assessment.js && mocha -r esm test/es2015/module-support-assessment-test.es6"
slash,"xo && ava && tsd"
slugify,"node bin/build && npx mocha --recursive"
slug,"standard && mocha --experimental-modules test/*.mjs && nyc --reporter none mocha test/**/*.js && karma start --single-run --browsers ChromeHeadless,FirefoxHeadless .karma.config.js && nyc report --reporter=text --reporter=html && nyc check-coverage --lines 100 --branches 100 --statements 100 --functions 100"
soap,"mocha --timeout 15000 --bail --exit test/*-test.js test/security/*.js"
socket.io-client,"prettier --check "lib/**/*.ts" "test/**/*.js" "test/**/*.ts" "support/**/*.js" && rimraf ./build && tsc && if test "$BROWSERS" = "1" ; then npm run test:browser; else npm run test:node; fi"
socket.io,"prettier --check "lib/**/*.ts" "test/**/*.ts" && rimraf ./dist && tsc && tsd && nyc mocha --require ts-node/register --reporter spec --slow 200 --bail --timeout 10000 test/socket.io.ts"
sockjs-client,"mocha tests/node.js"
source-map-loader,"npm-run-all -l -p "lint:**" && cross-env NODE_ENV=test jest --collectCoverageFrom="src/**/*.js" --coverage"
source-map,"node test/run-tests.js"
source-map-support,"mocha"
split2,"standard --verbose && nyc --lines 100 --branches 100 --functions 100 --check-coverage --reporter=text tape test.js"
split,"asynct test/"
sprintf-js,"eslint . && mocha test/*.js"
sprintf,"nodeunit test/function-export.js"
sqlite3,"node test/support/createdb.js && mocha -R spec --timeout 480000"
ssh2,"node test/test.js"
stack-trace,"jest"
standard,"./bin/cmd.js --verbose && tape test/*.js"
string,"gulp test"
strip-ansi,"xo && ava && tsd"
strip-json-comments,"xo && ava && tsd"
styled-components,"wsrun --exclude-missing test"
stylelint-config-standard,"jest"
stylelint-order,"eslint . --max-warnings=0 && prettier '**/*.js' --check && jest"
stylelint,"npm-run-all --parallel lint:* && jest --coverage"
stylelint-scss,"eslint . --ignore-path .gitignore && jest --coverage"
style-loader,"npm-run-all -l -p "lint:**" && cross-env NODE_ENV=test jest --collectCoverageFrom="src/**/*.js" --coverage"
stylus-loader,"npm-run-all -l -p "lint:**" && cross-env NODE_ENV=test jest --collectCoverageFrom="src/**/*.js" --coverage"
stylus,"mocha test/ test/middleware/ --require should --bail --check-leaks --reporter dot"
superagent,"rimraf lib dist && babel --config-file ./.lib.babelrc src --out-dir lib && browserify src/node/index.js -o dist/superagent.js -s superagent -g [ babelify --configFile ./.dist.babelrc ] && cross-env NODE_ENV=production browserify src/node/index.js -o dist/superagent.min.js -s superagent -g [ babelify --configFile ./.dist.babelrc ] -p tinyify && xo && remark . -qfo && eslint -c .lib.eslintrc lib && eslint -c .dist.eslintrc dist && make test"
supertest,"eslint lib/**/*.js test/**/*.js index.js && nyc --reporter=html --reporter=text mocha --exit --require should --reporter spec --check-leaks"
supports-color,"xo"
svgo,"c8 --reporter=html --reporter=text mocha "test/*/_index.js" "**/*.test.js" --ignore="node_modules/**""
swig,"make lint && make test reporter=spec && make test-browser && make coverage cov-reporter=travis-cov"
sw-precache-webpack-plugin,"make test"
sync-request,"tsc && flowgen lib/**/* && jest && cross-env SYNC_REQUEST_LEGACY=true jest && node test/benchmark"
systemjs,"concurrently -n w: 'npm:test:*'"
tape,"eslint . bin/* && nyc tap test/*.js && aud --production"
tar-fs,"standard && tape test/index.js"
tar,"tap && eslint test lib"
temp,"mocha test/temp-test.js"
terser-webpack-plugin,"npm-run-all -l -p "lint:**" && cross-env NODE_ENV=test jest --collectCoverageFrom="src/**/*.js" --coverage"
text-table,"tap test/*.js"
three,""
throttle-debounce,"eslint '{index,debounce,throttle,test/**/*}.js' && BABEL_ENV=test karma start"
through2,"standard && hundreds mocha test/test.js && node -e 'process.exit(process.version.startsWith("v8.") ? 0 : 1)' || polendina --cleanup --runner=mocha test/test.js"
through,"set -e; for t in test/*.js; do node $t; done"
tildify,"xo && ava && tsd"
tinycolor2,""
tmp,"rm -Rf ./coverage && istanbul cover ./node_modules/mocha/bin/_mocha --report none --print none --dir ./coverage/json -u exports -R test/*-test.js && istanbul report --root ./coverage/json html && istanbul report text-summary"
touch,"tap test/*.js --100 -J"
tough-cookie,"vows test/*_test.js"
tracer,"mocha test/* && eslint ."
traverse,"tape test/*.js"
ts-jest,"run-s -s test:e2e "test:unit -- {@}" --"
tslib,""
tslint-config-prettier,"yarn clean && jest --no-cache"
tslint,"npm-run-all test:pre -p test:mocha test:rules"
tslint-react,"./scripts/test-rules"
ts-loader,"git clean -xfd test/comparison-tests && git clean -xfd test/execution-tests && node test/run-tests.js"
ts-node,"tsc && typescript-json-schema --topRef --refs --validationKeywords allOf --out tsconfig.schema.json tsconfig.build-schema.json TsConfigSchema && node --require ./register ./scripts/create-merged-schema && node ./scripts/build-pack.js && prettier --check . && nyc ava"
ts-pnp,""
tv4,"grunt test"
tweetnacl,"make -C test/c && tape test/*.js test/c/*.js | faucet"
type-is,"mocha --reporter spec --check-leaks --bail test/"
typeorm,"rimraf ./build && tsc && mocha --file ./build/compiled/test/utils/test-setup.js --bail --recursive --timeout 60000 ./build/compiled/test"
@types-bluebird,"dtslint types"
@types-cordova,"dtslint types"
@typescript-eslint-eslint-plugin,"nx run-many --target=test --all --parallel"
@typescript-eslint-parser,"nx run-many --target=test --all --parallel"
typescript,"gulp tests && gulp runtests-parallel --light=false"
@types-express,"dtslint types"
@types-fs-extra,"dtslint types"
@types-jasmine,"dtslint types"
@types-jest,"dtslint types"
@types-jquery,"dtslint types"
@types-lodash,"dtslint types"
@types-mocha,"dtslint types"
@types-node,"dtslint types"
@types-react-dom,"dtslint types"
@types-react,"dtslint types"
@types-request,"dtslint types"
@types-uuid,"dtslint types"
uglify-js,"node test/compress.js && node test/mocha.js"
uglifyjs-webpack-plugin,"npm-run-all -l -p "lint:**" && cross-env NODE_ENV=test npm run test:coverage"
underscore,"eslint modules/*.js test/*.js && rollup -c && eslint underscore-umd.js && rollup -c rollup.config2.js && cd test-treeshake && rollup --config && qunit test/"
underscore.string,"eslint -c .eslintrc . && mocha --ui=qunit tests && istanbul cover ./node_modules/mocha/bin/_mocha  -- --report=lcov --ui=qunit tests"
unique-random-array,"xo && ava && tsd"
unist-util-visit,"rimraf "*.d.ts" && tsc && tsd && type-coverage && remark . -qfo && prettier . -w --loglevel warn && xo --fix && c8 --check-coverage --branches 100 --functions 100 --lines 100 --statements 100 --reporter lcov node test.js"
unzip,"tap ./test/*.js"
update-notifier,"xo && ava --timeout=20s --serial"
urijs,""
url-join,"mocha --require should"
urllib,"jshint . && mocha -t 30000 -r intelli-espower-loader test/*.test.js"
url-loader,"npm-run-all -l -p "lint:**" && cross-env NODE_ENV=test jest --collectCoverageFrom="src/**/*.js" --coverage"
url,"eslint . && nyc mocha test.js && zuul --local -- test.js"
url-parse,"c8 --reporter=lcov --reporter=text mocha test/test.js"
user-home,"ava"
utf8,"node tests/tests.js"
util,"node test/node/index.js"
utils-merge,"node_modules/.bin/mocha --reporter spec --require test/bootstrap/node test/*.test.js"
uuid,"[ -n $CI ] || npm run build && BABEL_ENV=commonjs node --throw-deprecation node_modules/.bin/jest test/unit/"
validate-npm-package-name,"tap ${TAP_FLAGS:-'--'} test/*.js && standard"
validator,"node --require @babel/register build-browser && uglifyjs validator.js -o validator.min.js  --compress --mangle --comments /Copyright/ && babel src -d . && babel src -d es --env-name=es && eslint src test && nyc mocha --require @babel/register --reporter dot"
valid-url,"make test"
verror,"make test"
vinyl-buffer,"node test"
vinyl-fs,"eslint . && jscs index.js lib/ test/ && mocha --async-only"
vinyl,"eslint . && nyc mocha --async-only"
vinyl-source-stream,"node test"
vorpal,"gulp build; mocha;"
vue-class-component,"tsc -p . && node build/build.js && webpack --config test/webpack.config.js && mocha test/test.build.js"
vue-hot-reload-api,"jest"
vue-i18n,"eslint --fix src test && flow check && tsc -p types && cross-env BABEL_ENV=test karma start config/karma.cover.conf.js && node config/build.js && node test/e2e/runner.js"
vue-loader,"yarn lint && jest --env node"
vue,"eslint src build test && flow check && tsc -p ./types/test/tsconfig.json && karma start test/unit/karma.cover.config.js && node build/build.js web-full-prod,web-server-basic-renderer && node test/e2e/runner.js --env phantomjs && node build/build.js web-runtime-cjs,web-server-renderer && jasmine JASMINE_CONFIG_PATH=test/ssr/jasmine.json && node build/build.js weex && jasmine JASMINE_CONFIG_PATH=test/weex/jasmine.json"
vue-property-decorator,"jest"
vue-router,"eslint src build test/e2e test/unit/specs && ./node_modules/karma/bin/karma start build/karma.config.js && bash ./build/e2e.sh"
vue-style-loader,"jest"
vue-template-compiler,"eslint src build test && flow check && tsc -p ./types/test/tsconfig.json && karma start test/unit/karma.cover.config.js && node build/build.js web-full-prod,web-server-basic-renderer && node test/e2e/runner.js --env phantomjs && node build/build.js web-runtime-cjs,web-server-renderer && jasmine JASMINE_CONFIG_PATH=test/ssr/jasmine.json && node build/build.js weex && jasmine JASMINE_CONFIG_PATH=test/weex/jasmine.json"
vuex,"eslint src && BABEL_ENV=development mocha test/unit/*.js --compilers js:babel-core/register && casperjs test --concise ./test/e2e"
warning,"NODE_ENV=development jest && NODE_ENV=production jest"
watchify,"tape test/*.js"
watch,""
web3,"mocha -R spec --require ts-node/register --grep E2E --invert"
webpack-bundle-analyzer,"./bin/install-test-webpack-versions.sh && mocha --exit --require @babel/register"
webpack-cli,"yarn build && yarn lint && yarn prepsuite && jest --reporters=default"
webpack-dev-middleware,"npm-run-all lint:js fmt:check && cross-env NODE_ENV=test jest --collectCoverageFrom="src/**/*.js" --coverage"
webpack-dev-server,"npm-run-all lint:js lint:type fmt:check && jest --forceExit --coverage"
webpack-hot-middleware,"mocha"
webpack-manifest-plugin,"ava && node set-webpack-version.js "^5" && npm install && ava && node set-webpack-version.js "^4.44.2" && npm install"
webpack-merge,"tsdx test"
webpack-node-externals,"mocha --colors -w ./test/*.spec.js"
webpack,"yarn lint && node --max-old-space-size=4096 --trace-deprecation node_modules/jest-cli/bin/jest"
webpack-sources,"yarn lint && jest"
websocket,"tape test/unit/*.js"
whatwg-fetch,"make && karma start ./test/karma.config.js && karma start ./test/karma-worker.config.js"
when,"jshint . && buster-test -e node && promises-aplus-tests test/promises-aplus-adapter.js"
which,"tap"
winston-daily-rotate-file,"mocha && eslint ."
winston,"populist lib/*.js lib/winston/*.js lib/winston/**/*.js && nyc --reporter=text --reporter lcov npm run test:mocha"
word-wrap,"mocha"
workbox-webpack-plugin,"nyc --clean false --silent mocha --timeout 60000"
wrench,"nodeunit tests/runner.js"
ws,"nyc --reporter=lcov --reporter=text mocha --throw-deprecation test/*.test.js"
xhr,"run-browser test/index.js -b -m test/mock-server.js | tap-spec"
xlsx,"make fullint && make travis"
xml2json,"lab -a code -v -t 93 test/test.js"
xml2js,"zap"
xmlbuilder,"nyc mocha "test/**/*.coffee""
xmldom,"npm-run-all test:unit lint"
xmlhttprequest,""
xml-js,"jasmine JASMINE_CONFIG_PATH=./test/jasmine.json && jest --config=test/jest.conf.js && tsc -p ./types"
xpath,"mocha"
xregexp,"browserify lib/index.js --standalone XRegExp > xregexp-all.js && nyc --reporter=lcov --reporter=text-summary jasmine JASMINE_CONFIG_PATH=tests/jasmine.json"
xtend,"node test"
yamljs,""
yaml,"jest --config config/jest.config.js"
yargs,"rimraf build && tsc -p tsconfig.test.json && cross-env NODE_ENV=test npm run build:cjs && c8 mocha --enable-source-maps ./test/*.cjs --require ./test/before.cjs --timeout=12000 --check-leaks && gts lint && eslint . --ext cjs --ext mjs --ext js"
yargs-parser,"rimraf build && tsc -p tsconfig.test.json && cross-env NODE_ENV=test npm run build:cjs && c8 --reporter=text --reporter=html mocha test/*.cjs"
yeoman-environment,"xo && nyc mocha --forbid-only"
yeoman-generator,"xo && nyc mocha --forbid-only"
yosay,"xo && mocha"
zone.js,""
